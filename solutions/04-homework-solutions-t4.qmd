---
title: "Section 4 Homework Solutions"
format: 
  html:
    embed-resources: true
execute:
  echo: false
  warning: false
  fig-height: 3
---

__Exercise 1__. Answers will vary.

<br>

__Exercise 2__.

```{r}
library(tidyverse)
set.seed(4151412)
satgpa <- openintro::satgpa |> mutate(sex = if_else(sex == 1,
                                         true = "male",
                                         false = "female"))
sat_train <- satgpa |> slice_sample(n = 800)
sat_test <- anti_join(satgpa, sat_train)

mod_small <- lm(fy_gpa ~ sat_v + hs_gpa + sex, data = sat_train)
pander::pander(mod_small)
```

a. Write the fitted regression equation with the three predictors.

$$
\hat{Y} = -0.3927 + 0.0199 sat_v + 0.6021 hs_{gpa} + -0.0785 sex_{ind}
$$
```{r}
pred_vec <- predict(mod_small, satgpa)
```

b. `r satgpa |> slice(1) |> pull(fy_gpa) |> round(4) - pred_vec[1] |> round(4)` points.

c. `r satgpa |> slice(2) |> pull(fy_gpa) |> round(4) - pred_vec[2] |> round(4)` points.

d. `r satgpa |> slice(3) |> pull(fy_gpa) |> round(4) - pred_vec[3] |> round(4)` points.

e. `r (satgpa |> slice(1:3) |> pull(fy_gpa) - pred_vec[1:3]) |> abs() |> mean() |> round(4)`

```{r}
resids <- sat_test$fy_gpa - predict(mod_small, sat_test)
mae_small <- round(mean(abs(resids)), 4)
```

f. The average error in predicting first year GPA for a model with SAT verbal, High school GPA, and sex as predictors is `r mae_small` points.

```{r}
mod_large <- lm(fy_gpa ~ sat_v + sat_m + hs_gpa + sex, data = sat_train)
resids <- sat_test$fy_gpa - predict(mod_large, sat_test)
mae_large <- round(mean(abs(resids)), 4)
```

g. The model without math SAT score because the mean absolute error is slightly lower.

h. Answers here will vary but if you use the analysis to argue __against__ the math SAT, you would probably mention the lower mean absolute error in predicting first-year GPA at the college without math SAT in the model. If you use the analysis to argue __for__ the math SAT, you might question whether a model with math SAT but without verbal SAT might be better (and that therefore, verbal SAT should be the one that is dropped first).

<br>


```{r}
set.seed(415131)
mu1 <- sample(c(220, 230, 240), size = 1)
mu2 <- sample(c(250, 260, 270), size = 1)
sigma1 <- sample(c(15, 20, 25), size = 1)
sigma2 <- sample(c(30, 40), size = 1)
```

__Exercise 3__. 

a. 

```{r, echo=FALSE, fig.height = 2.5}
library(ggplot2)
library(tidyverse)
ggplot(data = data.frame(x = c(mu1 - 3 * sigma1, mu1 + 3 * sigma1)),
  aes(x = x)) +
  stat_function(fun = dnorm, n = 101,
    args = list(mean = mu1, sd = sigma1)) +
  ylab("") + xlab("") +
  scale_y_continuous(breaks = NULL) + 
  scale_x_continuous(breaks = c(mu1 - 3 * sigma1, 
                                mu1 - 2 * sigma1,
                                mu1 - sigma1,
                                mu1,
                                mu1 + sigma1, 
                                mu1 + 2 * sigma1,
                                mu1 + 3 * sigma1)) +
  theme_minimal() +
  geom_vline(aes(xintercept = 225))
```

```{r}
Z_a <- (225 - mu1) / sigma1
```

b. Z = `r Z_a |> round(2)`

c. Our time to finish the race is `r Z_a |> round(2) |> abs()` standard deviations below the mean race time.

```{r}
pz_a <- pnorm(Z_a)
```

d. `r pz_a |> round(4)`

e. 

```{r, echo=FALSE, fig.height = 2.5}
library(ggplot2)
library(tidyverse)
ggplot(data = data.frame(x = c(mu2 - 3 * sigma2, mu2 + 3 * sigma2)),
  aes(x = x)) +
  stat_function(fun = dnorm, n = 101,
    args = list(mean = mu2, sd = sigma2)) +
  ylab("") + xlab("") +
  scale_y_continuous(breaks = NULL) + 
  scale_x_continuous(breaks = c(mu2 - 3 * sigma2, 
                                mu2 - 2 * sigma2,
                                mu2 - sigma2,
                                mu2,
                                mu2 + sigma2, 
                                mu2 + 2 * sigma2,
                                mu2 + 3 * sigma2)) +
  theme_minimal() +
  geom_vline(aes(xintercept = 240))
```

```{r}
Z_b <- (240 - mu2) / sigma2
```

f. Z = `r Z_b |> round(2)`

g. Race B's time was more "unusual" because the time is more standard deviations away from the mean time. (Or, Race B's time was more unusual because the z-score for this race was further from 0).

<br>

__Exercise 4__. 

```{r}
Z_1 <- (175 - 150) / 25
Z_2 <- (110 - 150) / 25
```

a. 

Friend A: `r Z_1 |> round(2)`

Friend B: `r Z_2 |> round(2)`

b. Friend B scored `r Z_2 |> round(2) |> abs()` standard deviations below the mean test score.

c. Friend B had the more unusual score because their Z-score was further from 0 (or, Friend B had the more unusual score because their test score was more standard deviations away from the mean).


```{r}
p_z1 <- 1 - pnorm(Z_1)
p_z2 <- pnorm(Z_2)
```

d. `r p_z1 |> round(4)`

e. `r p_z2 |> round(4)`

f. Z-scores would be useful to compare scores amongst the three friends because the two tests might be measured on various different scales. Z-scores allow us to assess how each friend did, relative to everyone else who took their particular test.

<br>

